pipeline {

    agent any 

 parameters {
   //string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')

   //text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')

   //booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')

   choice(name: 'CHOICE', choices: ['1', '2', '3'], description: 'Pick any number')

   //password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
 }

  stages {
    stage ('1 choice') {
      when {
                expression { choice == '1'}
            }
            steps {
                echo "Hello, Choice 1!"
            }
    }
    stage ('2 choice') {
      when {
                expression { choice == '2'}
            }
            steps {
                echo "Hello, Choice 2!"
            }
    }
   stage ('3 choice') {
      when {
                expression { choice == '3'}
            }
            steps {
                echo "Hello, Choice 3!"
            }
        }
  }
}

// when used with allOf, anyOf, branch, buildingTag, changeRequest, changelog, 
//changeset, environment, equals, expression, isRestartedRun, not, tag, triggeredBy

// Condition	    What does it check?
// branch	        When branch matches the given pattern
// buildingTag	    When the build is building a tag
// changelog	    When SCM changelog contains a given regular expression
// changeset	    When SCM changeset contains a file matching the given string/glob
// changeRequest	When the build is for a “change request” (Pull Request on GitHub/Bitbucket or Merge Request on GitLab)
// environment	    When an environment variable is set to a specified value
// equals	        When the expected value is equal to the actual value
// expression	    When specified Groovy expression evaluates to true
// tag	            When this build is building a tag matching the specified string/glob
// triggeredBy	    When the build is triggered by the given parameter
// beforeAgent	    Evaluate when before entering agent in a stage
// beforeInput	    Evaluate when before the input directive


// And there even are some logic operators:
// Condition	    What does it check?
// not	          When the nested condition is false
// allOf	        When all of the nested conditions are true
// anyOf	        When at least one of the nested conditions is true

// when {
//     anyOf {
//         triggeredBy cause: 'UpstreamCause', detail: 'K8s/eks_cluster'
//         triggeredBy cause: 'UpstreamCause', detail: 'Job C'
//     }
// }


// triggeredBy

// Execute the stage when the current build has been triggered by the param given. For example:

// when { triggeredBy 'SCMTrigger' }

// when { triggeredBy 'TimerTrigger' }

// when { triggeredBy 'UpstreamCause' }

// when { triggeredBy cause: "UserIdCause", detail: "vlinde" }